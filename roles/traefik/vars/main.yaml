---
traefik_image: docker.io/library/traefik
traefik_version: v2.4.2
traefik_log_level: DEBUG
traefik_k8s_apiservers: []
traefik_log_dir: /var/log/traefik
traefik_conf_dir: /etc/traefik
traefik_cert_dir: "{{ traefik_conf_dir }}/certs"
traefik_dynamic_conf_dir: "{{ traefik_conf_dir }}/conf.d"
traefik_static_conf:
  global:
    sendAnonymousUsage: false
  serversTransport:
    rootCAs:
      - "{{ traefik_cert_dir }}/ca.pem"
  log:
    level: "{{ traefik_log_level }}"
    filePath: "{{ traefik_log_dir }}/traefik.log"
  accessLog:
    filePath: "{{ traefik_log_dir }}/access.log"
  entryPoints:
    web:
      address: ":80"
      http:
        redirections:
          entryPoint:
            to: websecure
    websecure:
      address: ":443"
      proxyProtocol:
        insecure: true
    kubernetes:
      address: ":6443"
      proxyProtocol:
        insecure: true
  providers:
    file:
      directory: /etc/traefik/conf.d
      watch: true
    kubernetesCRD:
      endpoint: "https://{{ groups['controllers'] | first }}:6443" # TODO change to load balancer IP
      certAuthFilePath: "{{ traefik_cert_dir }}/ca.pem"
      token: "{{ traefik_k8s_token | default('') }}"
  api:
    dashboard: true
traefik_dynamic_conf:
  tcp:
    routers:
      k8s:
        rule: "HostSNI(`{{ ansible_hostname }}.{{ domain }}`) || HostSNI(`{{ ansible_hostname }}`)"
        service: k8s
        entryPoints:
          - kubernetes
        tls:
          passthrough: true
    services:
      k8s:
        loadBalancer:
          servers: "{{ traefik_k8s_apiservers }}"
  http:
    routers:
      dashboard:
        rule: Host(`{{ ansible_hostname }}.{{ domain }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
        service: api@internal
        tls: {}
        entryPoints:
          - websecure
  tls:
    stores:
      default:
        defaultCertificate:
          certFile: /etc/traefik/certs/kubernetes.pem
          keyFile: /etc/traefik/certs/kubernetes-key.pem

