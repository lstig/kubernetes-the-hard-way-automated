---
- ansible.builtin.set_fact:
    internal_interface: "{{ private_address_cidr | network_in_network(lookup('vars', 'ansible_' + item).ipv4.address) | ternary(item, internal_interface | default('')) }}"
  loop: "{{ ansible_interfaces | select('match', '^en') | list }}" # we only care about ethernet interfaces

- ansible.builtin.set_fact:
    routes: "{{ routes | default([]) | union([ {'to': kube_cluster_cidr | ipsubnet(24, item.split('-')[-1] | int), 'via': hostvars[item]['ansible_all_ipv4_addresses'] | reduce_on_network(private_address_cidr) |  first } ]) }}"
  loop: "{{ groups['workers'] }}"

- ansible.builtin.set_fact:
    netplan:
      network:
        version: 2
        renderer: networkd
        ethernets: "{{ { internal_interface: { 'routes': routes } } }}"

- name: Create static routes for pod networking
  ansible.builtin.copy:
    content: "{{ netplan | to_nice_yaml(indent=2) }}"
    dest: /etc/netplan/50-pod-network.yaml
    owner: root
    group: root
    mode: '0644'
  notify:
    - update netplan

- name: Flush handlers
  meta: flush_handlers

- name: Pull traefik container image
  containers.podman.podman_image:
    name: "{{ traefik_image }}"
    tag: "{{ traefik_version }}"
  tags:
    - container
    - download

- name: Ensure traefik host directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0750
  loop:
    - "{{ traefik_log_dir }}"
    - "{{ traefik_conf_dir }}"
    - "{{ traefik_cert_dir }}"
    - "{{ traefik_dynamic_conf_dir }}"
  tags:
    - configuration

- name: Copy tls certs to host
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ traefik_cert_dir }}"
  loop:
    - "{{ local_certs_dir }}/ca.pem"
    - "{{ local_certs_dir }}/kubernetes.pem"
    - "{{ local_certs_dir }}/kubernetes-key.pem"
  tags:
    - pki

- name: Create traefik configuration file
  ansible.builtin.copy:
    content: "{{ traefik_static_conf | to_nice_yaml(indent=2) }}"
    dest: "{{ traefik_conf_dir }}/traefik.yaml"
  notify:
    - restart traefik
  tags:
    - traefik_static_config
    - configuration

- name: Generate list of k8s api servers
  ansible.builtin.set_fact:
    traefik_k8s_apiservers: "{{ (traefik_k8s_apiservers + [ {'address': '{}:6443'.format(item) } ]) | unique }}"
  loop: "{{ groups['controllers'] }}"
  tags:
    - traefik_dynamic_config
    - configuration

- name: Create traefik dynamic configuration file
  ansible.builtin.copy:
    content: "{{ traefik_dynamic_conf | to_nice_yaml(indent=2) }}"
    dest: "{{ traefik_dynamic_conf_dir }}/dynamic.yaml"
  tags:
    - traefik_dynamic_config
    - configuration

- name: Create traefik service file
  ansible.builtin.template:
    src: traefik.service.j2
    dest: /etc/systemd/system/traefik.service
  notify:
    - update traefik service

- name: Enable and start traefik
  ansible.builtin.service:
    name: traefik
    state: started
    enabled: yes