---
- name: Load kube-proxy variables
  include_vars:
    file: kube_proxy.yaml

- name: Pull kube-proxy container image
  podman_image:
    name: "{{ kube_proxy_image }}"
    tag: "{{ kube_proxy_version }}"
  tags:
    - container

- name: Create kube-proxy lib dir {{ kube_proxy_lib_dir }}
  file:
    path: "{{ kube_proxy_lib_dir }}"
    state: directory
    mode: 0750

- name: Copy certs to {{ kube_proxy_lib_dir }}
  copy:
    src: "{{ certs_dir }}/{{ item }}"
    dest: "{{ kubelet_lib_dir }}"
    mode: 0640
  loop:
    - "kube-proxy.pem"
    - "kube-proxy-key.pem"

- name: Generate kubeconfig for kube-proxy
  shell: |
    kubectl config set-cluster {{ cluster }}\
        --certificate-authority={{ kube_ca_cert }} \
        --embed-certs=true \
        --server=https://{{ controller_ips |  first }}:6443 \
        --kubeconfig=kube-proxy.kubeconfig

    kubectl config set-credentials {{ clients['kube-proxy']['attributes']['cn'] }} \
        --client-certificate=kube-proxy.pem \
        --client-key=kube-proxy-key.pem \
        --embed-certs=true \
        --kubeconfig=kube-proxy.kubeconfig

    kubectl config set-context default \
        --cluster={{ cluster }} \
        --user={{ clients['kube-proxy']['attributes']['cn'] }} \
        --kubeconfig=kube-proxy.kubeconfig

    kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
  args:
    chdir: "{{ kube_proxy_lib_dir }}"
    creates: kube-proxy.kubeconfig

- name: Create KubeProxyConfiguration
  copy:
    dest: "{{ kube_proxy_config_file }}"
    content: "{{ kube_proxy_config | to_nice_yaml(indent=2) }}"
    mode: 0640

- name: Create kube-proxy service file
  template:
    src: kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service

- name: Enable and start kube-proxy
  systemd:
    name: kube-proxy
    state: started
    enabled: yes