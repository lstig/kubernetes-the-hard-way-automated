---

##
# Setup local files and directories
##

- name: create local 'certs' directory
  file:
    path: "{{ certs_dir }}"
    state: directory

- name: create local 'vars' directory
  file:
    path: "{{ local_vars_dir }}"
    state: directory

- name: create CA config file
  copy:
    content: "{{ ca_config | to_nice_json(indent=2) }}"
    dest: "{{ cert_files['ca_config'] }}"

- name: ensure yaml files for CA and client certs exist
  copy:
    content: ""
    dest: "{{ item }}"
    force: no
  loop:
    - "{{ cert_files['ca'] }}"
    - "{{ cert_files['clients'] }}"

##
# Load variables
##

- name: load CA certificate
  include_vars:
    file: "{{ cert_files['ca'] }}"
    name: ca
  tags:
    - always

- name: load client certificates
  include_vars:
    file: "{{ cert_files['clients'] }}"
    name: client_certs
  tags:
    - always

# dynamically update list of worker certificates based number of workers
- name: Adding worker instances to client list
  set_fact:
    clients: >
      {{ clients |
        combine({
          item: {
            'hostnames': [ item ] + hostvars[item]['ansible_all_ipv4_addresses'],
            'attributes': {
              'cn': 'system:node:' + item,
              'org': 'system:nodes'
            }
          }
        })
      }}
  loop: "{{ groups['workers'] }}"

##
# Generate CA and client certificates
##

- name: Generate CA cert and key
  include_tasks: ca.yml
  when: >
    ca | length <= 0 or
    'key' not in ca or
    'cert' not in ca

- name: Store CA cert information
  template:
    src: ca.yaml.j2
    dest: "{{ cert_files['ca'] }}"
  when: ca_update

- name: Generate client certificates and keys
  include_tasks: client.yml
  vars:
    name: "{{ item.key }}"
    attributes: "{{ item.value['attributes'] | default({}) }}"
    hostnames: "{{ item.value['hostnames'] | default(False) }}"
  when: >
    ca_update or
    item.key not in client_certs or
    'key' not in client_certs[item.key] or
    'cert' not in client_certs[item.key]
  loop: "{{ clients | dict2items }}"

- name: Store client certs
  template:
    src: clients.yaml.j2
    dest: "{{ cert_files['clients'] }}"

- name: Generate cert files
  include_tasks: save_file.yml
  loop: "{{ client_certs | combine({'ca': ca}) | dict2items }}"
  loop_control:
    loop_var: cert
